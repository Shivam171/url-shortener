package com.shvmpk.url_shortener.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import jakarta.persistence.*;
import lombok.*;
import org.hibernate.annotations.CreationTimestamp;

import java.time.LocalDateTime;
import java.util.List;

@Entity
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
@ToString(exclude = {"analyticsList", "urlVersions", "currentVersion"})
@EqualsAndHashCode(exclude = {"analyticsList", "urlVersions", "currentVersion"})
public class ShortCode {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private String shortCode;

    @Column(nullable = false)
    private String originalUrl;

    @Column(unique = true)
    private String alias;

    @Column(nullable = false)
    @Builder.Default
    private Boolean isProtected = false;

    private Boolean isPasswordAutoGenerated;

    private String password;

    private Integer maxClicks;

    @Builder.Default
    private Integer uniqueVisitorCount = 0;

    private LocalDateTime expiresAt;

    @Builder.Default
    private Boolean isClickBased = false;

    @CreationTimestamp
    private LocalDateTime createdAt;

    @OneToMany(mappedBy = "shortCode", cascade = CascadeType.ALL, orphanRemoval = true)
    @JsonManagedReference
    private List<Analytics> analyticsList;

    @OneToMany(mappedBy = "shortCode", cascade = CascadeType.ALL, orphanRemoval = true)
    @JsonManagedReference
    private List<UrlVersion> urlVersions;

    @OneToOne(fetch = FetchType.LAZY)
    @JsonIgnore
    @JoinColumn(name = "current_version_id")
    private UrlVersion currentVersion;
}
